<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>Controles</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inicializa_objeto();
controle_ativa();
pad = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Codigo dos controles
dir = 0;
cim = 0;

if abs(gamepad_axis_value(pad,gp_axislh)) &gt; 0.2{
    dir = gamepad_axis_value(pad,gp_axislh);
}
if abs(gamepad_axis_value(pad,gp_axislv)) &gt; 0.2{
    cim = gamepad_axis_value(pad,gp_axislv);
}

if gamepad_button_check(pad,gp_padl){dir--}
if gamepad_button_check(pad,gp_padr){dir++;}
if gamepad_button_check(pad,gp_padu){cim--;}
if gamepad_button_check(pad,gp_padd){cim++;}

pula = gamepad_button_check_pressed(pad,gp_face1);
pulando =  gamepad_button_check(pad,gp_face1);
dash = gamepad_button_check_pressed(pad,gp_face2);
dashando =  gamepad_button_check(pad,gp_face2);



//Primario e secundario
primaria_clica = gamepad_button_check_pressed(pad,gp_face3);
primaria_segura = gamepad_button_check(pad,gp_face3);
primaria_solta = gamepad_button_check_released(pad,gp_face3);
secundaria_clica = gamepad_button_check_pressed(pad,gp_face4);
secundaria_segura = gamepad_button_check(pad,gp_face4);
secundaria_solta = gamepad_button_check_released(pad,gp_face4);

//Troca
troca_primaria = gamepad_button_check_pressed(pad,gp_shoulderl);
troca_secundaria = gamepad_button_check_pressed(pad,gp_shoulderr);
if dir != 0 || cim !=0 ||pula ||dash || primaria_clica ||troca_primaria||troca_secundaria{
    controle_ativa();
}

if !ativo{exit;}

//Se precisar passar esses botoes para outro objeto eh mais facil e deixa o player mais limpo:
with(pai){
    dir = other.dir;
    cim = other.cim;
    //bater = other.bater
    //bater_direct = other.bater_direct
    pula = other.pula;
    pulando = other.pulando;
    dash = other.dash;
    dashando = other.dashando;

    //Primario e secundario
    primaria_clica = other.primaria_clica;
    primaria_segura = other.primaria_segura;
    primaria_solta = other.primaria_solta;
    secundaria_clica = other.secundaria_clica;
    secundaria_segura = other.secundaria_segura;
    secundaria_solta = other.secundaria_solta;

    //Troca
    troca_primaria = other.troca_primaria;
    troca_secundaria = other.troca_secundaria;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD das skills
if !ativo{exit;}

//Desenha os quadrados
for (i = 0; i &lt; 2; i++) {
    draw_sprite(spr_hud_sel,0,view_wview-100-90*i,70);
}

//Desenha os boto√µes

var ww = sprite_get_width(spr_hud_sel)/2;
var hh = sprite_get_height(spr_hud_sel)/2;

var px = view_wview-190+ww;
var py = 70+hh;
draw_sprite(spr_hud_genericgp,0,px,py);
draw_text(px,py,"X");
draw_text(px-ww,py-80,"LB");


px = view_wview-100+ww;
py = 70+hh;
draw_sprite(spr_hud_genericgp,0,px,py);
draw_text(px,py,"Y");
draw_text(px-ww,py-80,"RB");

px=view_wview-300;
draw_sprite(spr_hud_genericgp,0,px,py);
draw_text(px,py,"A");

px=view_wview-400;
draw_sprite(spr_hud_genericgp,0,px,py);
draw_text(px,py,"B");


//Desenha as habilidades selecionadas
draw_sprite(sele_hud(obj_player.primaria),0,view_wview-190,70);
draw_sprite(sele_hud(obj_player.secundaria),0,view_wview-100,70);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
