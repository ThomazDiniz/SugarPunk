<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Controles</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inicializa_objeto();
    controle_ativa();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Codigo dos controles


dir = 0;
cim = 0;

//Movimentação
if keyboard_check(vk_left){dir--;}
if keyboard_check(vk_right){dir++;}
if keyboard_check(vk_up){cim--;}
if keyboard_check(vk_down){cim++;}
pula = keyboard_check_pressed(vk_space)
pulando =  keyboard_check(vk_space)
dash = keyboard_check_pressed(ord("A"))
dashando =  keyboard_check(ord("A"))


//Primario e secundario
primaria_clica = keyboard_check_pressed(ord('S'));
primaria_segura = keyboard_check(ord('S'));
primaria_solta = keyboard_check_released(ord('S'));

secundaria_clica = keyboard_check_pressed(ord('D'));
secundaria_segura = keyboard_check(ord('D'));
secundaria_solta = keyboard_check_released(ord('D'));

//Troca
troca_primaria = keyboard_check_pressed(ord('W'));
troca_secundaria = keyboard_check_pressed(ord('E'));

if dir != 0 || cim !=0 ||pula ||dash || primaria_clica ||troca_primaria||troca_secundaria{
    with(Controles){ativo = false;}
    ativo = true;
}
if !ativo{exit;}

//Se precisar passar esses botoes para outro objeto eh mais facil e deixa o player mais limpo:
with(pai){
    dir = other.dir;
    cim = other.cim;
    //bater = other.bater
    //bater_direct = other.bater_direct
    pula = other.pula;
    pulando = other.pulando;
    dash = other.dash;
    dashando = other.dashando;

    //Primario e secundario
    primaria_clica = other.primaria_clica;
    primaria_segura = other.primaria_segura;
    primaria_solta = other.primaria_solta;
    secundaria_clica = other.secundaria_clica;
    secundaria_segura = other.secundaria_segura;
    secundaria_solta = other.secundaria_solta;

    //Troca
    troca_primaria = other.troca_primaria;
    troca_secundaria = other.troca_secundaria;



}

//Código Antigo
/*///Codigo dos controles

dir = 0;
cim = 0;
pula = false;
pulando = false;
dash = false;
dashando = false;
clicaInvisibilidade = false;

//Movimentação
if keyboard_check(vk_left){dir--;}
if keyboard_check(vk_right){dir++;}
if keyboard_check(vk_up){cim--;}
if keyboard_check(vk_down){cim++;}
if keyboard_check_pressed(vk_space){pula = true;}
if keyboard_check(vk_space){pulando = true;}
if keyboard_check_pressed(ord("A")){dash =  true;}
if keyboard_check(ord("A")){dashando =  true;}*/


//Bater
//bater = keyboard_check_pressed(ord('S'));
//bater_direct = keyboard_check(ord('S'));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD das skills
if !ativo{exit;}

//Desenha os quadrados
for (i = 0; i &lt; 2; i++) {
    draw_sprite(spr_hud_sel,0,view_wview-100-90*i,70);
}

//Desenha os botoões

var ww = sprite_get_width(spr_hud_sel)/2;
var hh = sprite_get_height(spr_hud_sel)/2;

draw_sprite(spr_hud_sbutton,0,view_wview-190+ww,70+hh);
draw_sprite(spr_hud_button_generic2,0,view_wview-500+ww,70+hh);
draw_sprite(spr_hud_button_generic1,0,view_wview-350+ww,70+hh);
draw_sprite(spr_hud_button_generic1,0,view_wview-100,20);
draw_sprite(spr_hud_button_generic1,0,view_wview-190,20);
draw_text(view_wview-100,20,"E");
draw_text(view_wview-190,20,"W");

draw_sprite(spr_hud_dbutton,0,view_wview-100+ww,70+hh);

//Desenha as habilidades selecionadas
draw_sprite(sele_hud(obj_player.primaria),0,view_wview-190,70);
draw_sprite(sele_hud(obj_player.secundaria),0,view_wview-100,70);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
